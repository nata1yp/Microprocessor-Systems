READ MACRO 			
	MOV AH, 8  
	INT 21H
ENDM

PRINT MACRO CHAR 	
	MOV DL, CHAR 
	MOV AH, 2 
	INT 21H
ENDM   


NEW_LINE MACRO
    MOV DL, 0AH
    MOV AH, 2
    INT 21H
    MOV DL, 0DH
    MOV AH, 2
    INT 21H
ENDM

CODE_SEG SEGMENT
	ASSUME CS:CODE_SEG 


MAIN PROC FAR
START:
    CALL HEX_KEYB 
    MOV AH,00H 
    MOV BX,AX
    MOV AX,10H
    MUL BX
    MOV BX,AX 
    CALL HEX_KEYB	
    ADD BX,AX
    PRINT '='			
    CALL PRINT_DEC		 
    PRINT '='
    CALL PRINT_OCT
    PRINT '='
    CALL PRINT_BIN
    NEW_LINE
    JMP START
    ENDING:
    	MOV AX,4C00H
    	INT 21H
MAIN ENDP
	
	
HEX_KEYB PROC NEAR 
PUSH DX 
IGNORE:
	READ
	PRINT AL
	CMP AL,'Q'
	JE ENDING
	CMP AL,30H 
	JL IGNORE 
	CMP AL,39H                                              
	JG ADDR1
	SUB AL,30H 
	JMP ADDR2
	ADDR1:
		CMP AL,'A'
		JL IGNORE
		CMP AL,'F'
		JG IGNORE
		SUB AL,37H 
	ADDR2:
		POP DX 
		RET
HEX_KEYB ENDP


PRINT_DEC PROC NEAR
PUSH CX
PUSH AX
PUSH BX
MOV BH,00H
MOV AX, BX
MOV CX,0
ADDR3:
	MOV DX,0
	MOV BX,0AH
	DIV BX
	PUSH DX
	INC CX
	CMP AX,0
	JNE ADDR3
ADDR4:
	POP DX
	ADD DX,30H
	PRINT DL
	LOOP ADDR4
POP BX 
POP AX
POP CX
RET 
PRINT_DEC ENDP

PRINT_OCT PROC NEAR 
PUSH CX
PUSH AX
MOV AX,BX
PUSH BX
MOV CX,0

ADDR5:
	MOV DX,0
	MOV BX,8
	DIV BX 
	PUSH DX
	INC CX
	CMP AX,0
	JNZ ADDR5      
MOV BX,CX
ADDR6:       
    MOV AX,BX
    CMP CX,BX
    JNE NOTFIRST
        PRINT '0' 
        POP DX
        LOOP ADDR6
    NOTFIRST:
        POP DX
	    ADD DX,30H
	    PRINT DL
	    LOOP ADDR6
POP BX
POP AX
POP CX  
RET
PRINT_OCT ENDP

PRINT_BIN PROC NEAR 
PUSH AX
MOV AX,BX
PUSH CX
MOV CX,8
ADDR7:
	SHL BL,1
	MOV DL,0
	ADC DL,30H
	PRINT DL
	LOOP ADDR7
POP CX
MOV BX,AX
POP AX  
RET
PRINT_BIN ENDP  

CODE_SEG ENDS
	END MAIN



