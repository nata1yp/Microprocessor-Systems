READ MACRO 
MOV AH, 8 
INT 21H 
ENDM
PRINT MACRO CHAR 
MOV DL, CHAR 
MOV AH, 2 
INT 21H
ENDM
PRINT_STR MACRO STRING 
MOV DX, OFFSET STRING 
MOV AH,9
INT 21H
ENDM
EXIT MACRO 
MOV AX, 4C00H 
INT 21H
ENDM 
PRINT_DEC MACRO
ADD DL, 30H
MOV AH,2
INT 21H
ENDM

DATA SEGMENT
    BEGIN DB 'START $'
    NEW DB '(Y,N):$' 
    ERROR DB 'ERROR$' 
    DOT DB '.$'  
    NEWLINE DB 0AH,0DH,'$' 
    TABLE DB 1 DUP(?)
ENDS

STACK SEGMENT
    DW   128  DUP(0)
ENDS

CODE SEGMENT
ENDS

MAIN PROC FAR
    MOV AX, DATA
    MOV DS, AX
    PRINT_STR BEGIN
START: 
    PRINT_STR NEW
    CALL HEX_KEYB      
    CMP AL,'N'
    JE THEEND 
    MOV BL,AL
    ROL BX,4
    CALL HEX_KEYB
    CMP AL,'N'
    JE THEEND
    OR BL,AL 
    ROL BX,4
    CALL HEX_KEYB
    CMP AL,'N'
    JE THEEND
    OR BL,AL 
    CMP BX,2047  
    JLE FIRST
    CMP BX,3685  
    JLE SECOND
    CMP BX,4095  
    JL THIRD
    PRINT_STR ERROR
    PRINT_STR NEWLINE
    JMP START
     
FIRST:
    MOV DX,1000
    MOV AX,BX
    MUL DX        
    MOV CX,4095
    DIV CX   
    MOV [TABLE],AH
    MOV BX,10
    MUL BX
    JMP  CONV
    
SECOND:
    MOV DX,400
    MOV AX,BX
    MUL DX
    MOV CX,3276
    DIV CX
    ADD AX,250
    MOV [TABLE],AH
    MOV BX,10
    MUL BX
    
    JMP CONV   
    
THIRD:
    MOV DX,600
    MOV AX,BX
    MUL DX
    MOV CX,819
    DIV CX
    SUB AX,2000 
    MOV [TABLE],AH
    MOV BX,10
    MUL BX
    
     
CONV:
    MOV CX,0
DIGIT:
    MOV DX,0
    MOV BX,10
    DIV BX
    PUSH DX
    INC CX
    CMP AX,0
    JNE DIGIT
    DEC CX
TIGID:
    POP DX 
    PRINT_DEC
    LOOP TIGID
    PRINT '.'
    POP DX
    MOV DL,[TABLE]  
    PRINT_DEC  
    PRINT_STR NEWLINE
    JMP START 
          

THEEND:
    EXIT
    
MAIN ENDP
 
 
 
HEX_KEYB PROC NEAR
    PUSH DX
IGNORE:
    READ 
    CMP AL,'N'
    JE THEEND
    CMP AL,30H
    JL IGNORE
    CMP AL,39H
    JG ADDRESS1
    SUB AL,30H
    JMP ADDRESS2
ADDRESS1:
    CMP AL,'A'
    JL IGNORE
    CMP AL,'F'
    JG IGNORE
    SUB AL,37H
ADDRESS2:
    POP DX
    RET
HEX_KEYB ENDP