READ MACRO 			
	MOV AH, 8  
	INT 21H
ENDM
PRINT MACRO CHAR 	
	MOV DL, CHAR 
	MOV AH, 2 
	INT 21H
ENDM   
CODE_SEG SEGMENT
    ASSUME CS:CODE_SEG

MAIN PROC FAR
   	MOV BX,16
    	MOV CX,16
    	PRINT "X"
    	PRINT "="
    	CALL HEX_KEYB  
    	MUL BL
    	MOV BL,AL
    	CALL HEX_KEYB 
    	ADD BL,AL
    	PRINT " "
    	PRINT "Y"
    	PRINT "="
    	CALL HEX_KEYB 
    	MUL CL
    	MOV CL,AL
    	CALL HEX_KEYB 
    	ADD CL,AL
    	PRINT 0AH
    	PRINT 0DH
    	PRINT "X"
    	PRINT "+"
    	PRINT "Y"
    	PRINT "="    
    	MOV AX,CX
    	ADD AX,BX
    	CALL PRINT_DEC 
    	PRINT 0AH
    	PRINT 0DH
    	PRINT "X"
    	PRINT "-"
    	PRINT "Y"
    	PRINT "="    
    	MOV AX,BX
    	CMP AX,CX
    	JG NOSIGN
    	PUSH AX
    	PRINT "-"
    	POP AX
    	SUB CX,AX
    	MOV AX,CX
    	CALL PRINT_DEC
    	JMP FINISH
    NOSIGN:
    	SUB AX,CX
    	CALL PRINT_DEC
    	JMP FINISH
HEX_KEYB PROC NEAR

PUSH DX 
IGNORE: 
READ
CMP AL,30H
JL IGNORE
CMP AL,39H
JG ADDR1
PRINT AL
SUB AL,30H
JMP ADDR2
ADDR1:
CMP AL,'A'
JL IGNORE
CMP AL,'F'
JG IGNORE
PRINT AL
SUB AL,37H
ADDR2:
POP DX
RET
HEX_KEYB ENDP   

PRINT_DEC PROC NEAR
PUSH CX
PUSH AX
PUSH BX
MOV BH,00H
MOV CX,0
ADDR3:
	MOV DX,0
	MOV BX,0AH
	DIV BX
	PUSH DX
	INC CX
	CMP AX,0
	JNE ADDR3
ADDR4:
	POP DX
	ADD DX,30H
	PRINT DL
	LOOP ADDR4
POP BX 
POP AX
POP CX
RET 
PRINT_DEC ENDP

FINISH:
CODE_SEG ENDS
END MAIN
